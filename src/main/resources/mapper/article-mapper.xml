<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aniDB.aniDB_backend.mapper.ArticleMapper">
    <resultMap id="ArticleResultMap" type="com.aniDB.aniDB_backend.entity.Article">
        <id property="articleId" column="article_id" />
        <result property="memberId" column="member_id" />
        <result property="animeId" column="anime_id" />
        <result property="publicationId" column="publication_id" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="views" column="views" />
        <result property="upvotes" column="upvotes" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
    </resultMap>

    <resultMap id="ArticleDTOResultMap" type="com.aniDB.aniDB_backend.dto.entity.article.ArticleDTO">
        <id property="articleId" column="article_id" />
        <result property="animeId" column="anime_id" />
        <result property="publicationId" column="publication_id" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="views" column="views" />
        <result property="upvotes" column="u_upvotes" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
        <association property="memberDTO" javaType="com.aniDB.aniDB_backend.dto.entity.member.MemberDTO">
            <id property="memberId" column="m_member_id" />
            <result property="loginId" column="m_login_id" />
            <result property="name" column="m_member_name" />
            <result property="nickname" column="m_nickname" />
        </association>
    </resultMap>

    <select id="selectArticleById" parameterType="java.lang.Long" resultMap="ArticleResultMap">
        SELECT * FROM anidb_article WHERE article_id = #{articleId}
    </select>

    <select id="selectArticlesByMemberId" parameterType="java.lang.Long" resultMap="ArticleResultMap">
        SELECT * FROM anidb_article WHERE member_id= #{memberId}
    </select>

    <select id="selectArticlesByPublicationId" parameterType="java.lang.Long" resultMap="ArticleResultMap">
        SELECT * FROM anidb_article WHERE publication_id = #{publicationId}
    </select>

    <select id="selectArticlesByPublicationName" parameterType="java.lang.String" resultMap="ArticleResultMap">
        SELECT a.*
        FROM anidb_article a
                 INNER JOIN publication p ON a.publication_id = p.publication_id
        WHERE p.title = #{title}
    </select>
    
    <select id="getArticleDTOById" parameterType="java.lang.Long" resultMap="ArticleDTOResultMap">
        SELECT a.*,
               m.member_id   as m_member_id,
               m.member_id   as m_member_id,
               m.loginid     as m_login_id,
               m.member_name as m_member_name,
               m.nickname    as m_nickname,
               (
                   SELECt count(*)
                   FROM upvoted_article u
                   INNER JOIN anidb_article aa on u.article_id = aa.article_id
                   WHERE u.article_id = #{articleId}
               ) as u_upvotes
        FROM anidb_article a
                 INNER JOIN anidb_member m on m.member_id = a.member_id
        WHERE a.article_id = #{articleId}
    </select>

    <select id="selectAllArticles" resultMap="ArticleResultMap">
        SELECT * FROM anidb_article
    </select>

    <insert id="insertArticle"
            useGeneratedKeys="true" keyColumn="article_id" keyProperty="article.articleId"
            parameterType="map"
    >
        INSERT INTO anidb_article (member_id, publication_id, anime_id, title, content, views, upvotes)
        VALUES (#{memberId}, #{article.publicationId}, #{article.animeId}, #{article.title}, #{article.content}, #{article.views}, #{article.upvotes})
    </insert>

    <insert id="insertArticleNecessary"
            useGeneratedKeys="true" keyColumn="article_id" keyProperty="article.articleId"
            parameterType="map"
        >
        INSERT INTO anidb_article (member_id)
            VALUES (#{memberId})
    </insert>

    <update id="updateArticle" parameterType="com.aniDB.aniDB_backend.entity.Article">
        UPDATE anidb_article SET
        publication_id = #{publicationId},
        anime_id = #{animeId},
        title = #{title},
        content = #{content},
        views = #{views},
        series_id = #{seriesId},
        upvotes = #{upvotes}
        WHERE article_id = #{articleId}
    </update>

    <delete id="deleteArticleById" parameterType="java.lang.Long">
        DELETE FROM anidb_article WHERE article_id = #{articleId}
    </delete>

    <select id="getPages" parameterType="org.springframework.data.domain.Pageable" resultMap="ArticleDTOResultMap">
        SELECT a.*,
               m.member_id   as m_member_id,
               m.member_id   as m_member_id,
               m.loginid     as m_login_id,
               m.member_name as m_member_name,
               m.nickname    as m_nickname,
               count(u.member_id) as u_upvotes
        FROM anidb_article a
                 INNER JOIN anidb_member m on m.member_id = a.member_id
                 LEFT join upvoted_article u on u.article_id = a.article_id
        group by a.article_id
        LIMIT #{pageSize}
        OFFSET #{pageNumber}
    </select>
</mapper>